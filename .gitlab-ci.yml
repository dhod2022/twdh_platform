stages:
  - react_build
  - docker_build
  - deploy
  
before_script:
  - export IMAGE_LABELS=$(date +%Y%m%d).${CI_PIPELINE_ID}
  - echo $IMAGE_LABELS

react_build:
  stage: react_build
  image: node:10.22.0

  script:
    - echo "Building react"
    - export http_proxy=http://10.160.3.88:8080
    - export https_proxy=http://10.160.3.88:8080
    - npm install
    - npm run build
    - export http_proxy=
    - export https_proxy=
  artifacts:
    paths:
      - src/static
    expire_in: 1 hour
docker_build:
  stage: docker_build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "Building docker image"
    - ls src/static/ 
    - cat $DOCKER_LOGIN > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/server/Dockerfile.gitlabci --destination harbor.cht.com.tw:30725/cht_daijiong095.095lin/acm-express:$IMAGE_LABELS

deploy:
  stage: deploy
  image:
    name: harbor.cht.com.tw:30725/cht_yettasu/kubectl:1.18.5
    entrypoint: [""]
  script:
    - echo $IMAGE_LABELS
    - sed -i -e "s/DOCKERIMAGETAG/$IMAGE_LABELS/g" $CI_PROJECT_DIR/acm-express.yaml
    - export KUBECONFIG=$KUBECONFIG
    - sleep 10s
    - kubectl apply -f $CI_PROJECT_DIR/acm-express.yaml